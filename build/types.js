// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var isArray, isFunction, isInstance, isObject, isString, isUnemptyString, verifyArray, verifyFunction, verifyInstance, verifyObject, verifyString, verifyUnemptyString;

  verifyUnemptyString = function(arg, msg) {
    if (isUnemptyString(arg) === false) {
      throw new Error(msg || 'Invalid string');
    }
  };

  isUnemptyString = function(arg) {
    if (isString(arg) && arg !== '') {
      return true;
    }
    return false;
  };

  verifyString = function(arg, msg) {
    if (isString(arg) === false) {
      throw new Error(msg || 'Invalid string');
    }
  };

  isString = function(arg) {
    if (typeof arg === 'string') {
      return true;
    }
    return false;
  };

  verifyObject = function(arg, msg) {
    if (isObject(arg) === false) {
      throw new Error(msg || 'Invalid object');
    }
  };

  isObject = function(arg) {
    if (typeof arg === 'object' && arg !== null && isArray(arg) === false) {
      return true;
    }
    return false;
  };

  verifyArray = function(arg, msg) {
    if (isArray(arg) === false) {
      throw new Error(msg || 'Invalid array');
    }
  };

  isArray = function(arg) {
    if (Object.prototype.toString.call(arg) === '[object Array]') {
      return true;
    }
    return false;
  };

  verifyFunction = function(arg, msg) {
    if (isFunction(arg) === false) {
      throw new Error(msg || 'Invalid function');
    }
  };

  isFunction = function(arg) {
    if (typeof arg === 'function') {
      return true;
    }
    return false;
  };

  verifyInstance = function(arg, prototype, msg) {
    if (isInstance(arg, prototype) === false) {
      throw new Error(msg || 'Invalid type');
    }
  };

  isInstance = function(arg, prototype) {
    if (typeof arg === 'undefined' || arg === null) {
      return false;
    }
    if (isFunction(prototype) && arg instanceof prototype) {
      return true;
    }
    return false;
  };

  module.exports = {
    verifyUnemptyString: verifyUnemptyString,
    isUnemptyString: isUnemptyString,
    verifyString: verifyString,
    isString: isString,
    verifyObject: verifyObject,
    isObject: isObject,
    verifyArray: verifyArray,
    isArray: isArray,
    verifyFunction: verifyFunction,
    isFunction: isFunction,
    verifyInstance: verifyInstance,
    isInstance: isInstance
  };

}).call(this);
